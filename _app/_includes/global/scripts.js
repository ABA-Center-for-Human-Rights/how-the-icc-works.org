!(function (i, t, s) { function e (s) { this.options = s || {}, this.links = [], this.start = function () { var s = t.querySelectorAll('.spy-link'); [].forEach.call(s, function (i) { if (typeof i == 'object') { var s = i.querySelector('a').getAttribute('href'), e = t.querySelector(s); this.links.push({link: i, section: e}) } }.bind(this)), i.addEventListener('scroll', function (i) { this.scrolling(), this.options.scrollCallback && this.options.scrollCallback(i) }.bind(this), !1) }, this.scrolling = function () { var s = null; for (var e in this.links) { var l = this.links[e]; i.scrollY > l.section.offsetTop - 300 && (s = l), i.scrollY + i.innerHeight > t.body.scrollHeight - 20 && (s = l) } if (i.scrollY < this.links[0].section.offsetTop) { var o = t.querySelector('li.active'); o && o.classList.remove('active') } if (s && !s.link.classList.contains('active')) { var o = t.querySelector('li.active'); o && o.classList.remove('active'), s.link.classList.add('active') } } }i.force.bindHashes(); var l = t.getElementById('menu'), o = t.getElementById('banner'); i.onscroll = function () { i.scrollY > l.offsetTop && l.classList.add('fixed'), i.scrollY < o.offsetTop + o.clientHeight && l.classList.remove('fixed') }, (new e()).start() }(window, document))
